build-runtime: true
id: org.wine.Sdk
id-platform: org.wine.Platform
branch: &app-version '10.5'
sdk: org.freedesktop.Sdk
runtime: org.freedesktop.Platform
runtime-version: &runtime-version '24.08'
finish-args:
  - --sdk=org.wine.Sdk//10.5
  - --runtime=org.wine.Platform//10.5

sdk-extensions:
  # - org.freedesktop.Sdk.Debug
  # - org.freedesktop.Sdk.Locale
  # - org.freedesktop.Sdk.Docs
  - org.freedesktop.Sdk.Compat.i386              # Needed for building 32bit Wine
  - org.freedesktop.Sdk.Extension.toolchain-i386 # Needed for building 32bit Wine
  - org.freedesktop.Sdk.Extension.mingw-w64      # Needed for cross-compiling 32/64bit Wine

# platform-extensions:
  # - org.freedesktop.Platform.Locale

inherit-extensions:
  # Re-export org.freedesktop.Platform extensions for child Apps to inherit
  - org.freedesktop.Platform.GL          # OpenGL
  - org.freedesktop.Platform.VAAPI.Intel # Intel VAAPI
  - org.freedesktop.Platform.VulkanLayer
  - org.freedesktop.Platform.Timezones
  - org.freedesktop.Platform.GStreamer
  - org.freedesktop.Platform.openh264
  - org.freedesktop.Platform.Icontheme
# inherit-sdk-extensions:
  # - org.freedesktop.Sdk.Extension

add-extensions:
  # Re-export org.freedesktop.Platform extensions for child Apps to inherit
  org.freedesktop.Platform.Compat.i386:       # 32bit Linux compatibility
    directory: lib/i386-linux-gnu
    version: *runtime-version

  org.freedesktop.Platform.Compat.i386.Debug: # 32bit Linux compatibility debug
    directory: lib/debug/lib/i386-linux-gnu
    version: *runtime-version
    no-autodownload: true

  org.freedesktop.Platform.GL32:              # 32bit OpenGL
    directory: lib/i386-linux-gnu/GL
    version: '1.4'
    versions: 24.08;1.4
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: vulkan/icd.d;glvnd/egl_vendor.d;egl/egl_external_platform.d;OpenCL/vendors;lib/dri;lib/d3d;lib/gbm;vulkan/explicit_layer.d;vulkan/implicit_layer.d
    download-if: active-gl-driver
    enable-if: active-gl-driver
    autoprune-unless: active-gl-driver

  org.freedesktop.Platform.GL32.Debug:        # 32bit OpenGL Debug
    directory: lib/debug/lib/i386-linux-gnu/GL
    version: '1.4'
    versions: 24.08;1.4
    subdirectories: true
    no-autodownload: true
    merge-dirs: vulkan/icd.d;glvnd/egl_vendor.d;egl/egl_external_platform.d;OpenCL/vendors;lib/dri;lib/d3d;lib/gbm;vulkan/explicit_layer.d;vulkan/implicit_layer.d
    enable-if: active-gl-driver
    autoprune-unless: active-gl-driver

  org.freedesktop.Platform.VAAPI.Intel.i386:  # 32bit Intel VAAPI
    directory: lib/i386-linux-gnu/dri/intel-vaapi-driver
    version: *runtime-version
    versions: *runtime-version
    autodelete: false
    no-autodownload: true
    add-ld-path: lib
    download-if: have-intel-gpu
    autoprune-unless: have-intel-gpu

  org.freedesktop.Platform.ffmpeg-full:       # FFmpeg
    directory: lib/ffmpeg
    add-ld-path: .
    version: *runtime-version
    autodelete: false

  org.freedesktop.Platform.ffmpeg_full.i386:  # 32bit FFmpeg
    directory: lib32/ffmpeg
    add-ld-path: .
    version: *runtime-version
    autodelete: false

cleanup-commands:
  # Make directories needed by extensions
  - mkdir -p ${FLATPAK_DEST}/lib/i386-linux-gnu              # 32bit Linux compatibility
  - mkdir -p ${FLATPAK_DEST}/lib/debug/lib/i386-linux-gnu    # 32bit Linux compatibility debug
  - mkdir -p ${FLATPAK_DEST}/lib/debug/lib/i386-linux-gnu/GL # 32bit OpenGL Debug
  - mkdir -p ${FLATPAK_DEST}/lib/ffmpeg                      # FFmpeg
  - mkdir -p ${FLATPAK_DEST}/lib32/ffmpeg                    # 32bit FFmpeg
  # - /usr/libexec/freedesktop-post.sh                         # Pre-packaged script that sets up stuff (Not sure if still required)

# cleanup-platform-commands:
  # - /usr/libexec/freedesktop-post.sh # Pre-packaged script that sets up stuff (Not sure if still required)

modules:
  - name: Wine
    sources:
      - type: git
        url: https://gitlab.winehq.org/wine/wine
        tag: wine-10.5

      - type: file
        path: org.wine.Sdk.metainfo.xml

      - type: file
        path: org.wine.Platform.metainfo.xml

    buildsystem: simple
    build-options:
      arch:
        x86_64:
          append-path: /usr/lib/sdk/mingw-w64/bin:/usr/lib/sdk/toolchain-i386/bin # /usr/lib/sdk/mingw-w64/bin contains x86_64-w64-mingw32-gcc and i686-w64-minigw32-gcc compilers from sdk-extension org.freedesktop.Sdk.Extension.mingw-w64, and /usr/lib/sdk/toolchain-i386/bin contains gnu 32bit libs (needed for building the 32bit version of Wine) from org.freedesktop.Sdk.Extension.toolchain-i386

    build-commands:
      - |
        mkdir wine64                                 # Make directory for building 64bit Wine
        mkdir wine32                                 # Make directory for building 32bit Wine

        cd wine64
        ../configure                                `# Run Wine configure file to generate makefile with following flags` \
          --prefix=${FLATPAK_DEST}                  `# Set prefix to Flatpak root (/usr for an SDK)` \
          --enable-win64                            `# Set flag to compile Windows 64bit version` \
          --with-x                                  `# Set flag to compile with X11` \
          --with-wayland                            `# Set flag to compile with Wayland` \
          --with-pulse                              `# Set flag to compile with Pulse audio` \
          --with-dbus                               `# Set flag to compile with Dbus` \
          CC="ccache gcc"                           `# Compile C with GCC using ccache` \
          CXX="ccache g++"                          `# Compile C++ with G++ using ccache` \
          x86_64_CC="ccache x86_64-w64-mingw32-gcc" `# Cross-compile C with x86_64-w64-mingw32-gcc using ccache`
        make -j`nproc --ignore=2`                    # Build 64bit Wine using number of available cores minus 2
        mkdir -p /usr/share/runtime/docs/man         # /usr/share/man symlinks here but it is not created by default and causes an error when make installing if not created beforehand
        make install

        cd ../wine32
        ../configure                                `# Run Wine configure file to generate makefile with following flags` \
          --prefix=${FLATPAK_DEST}                  `# Set prefix to Flatpak root (/usr for an SDK)` \
          --with-wine64=../wine64                   `# Use built 64bit Wine above` \
          --with-x                                  `# Set flag to compile with X11` \
          --with-wayland                            `# Set flag to compile with Wayland` \
          --with-pulse                              `# Set flag to compile with Pulse audio` \
          --with-dbus                               `# Set flag to compile with Dbus` \
          CC="ccache i686-unknown-linux-gnu-gcc"    `# Compile C with GCC using ccache` \
          CXX="ccache i686-unknown-linux-gnu-g++"   `# Compile C++ with G++ using ccache` \
          x86_64_CC="ccache i686-w64-mingw32-gcc"   `# Cross-compile C with x86_64-w64-mingw32-gcc using ccache`
        make -j`nproc --ignore=2`                    # Build 32bit Wine using number of available cores minus 2
        make install

        cd ..
        install -Dm644 org.wine.Sdk.metainfo.xml -t ${FLATPAK_DEST}/share/metainfo/      # Install SDK metainfo
        install -Dm644 org.wine.Platform.metainfo.xml -t ${FLATPAK_DEST}/share/metainfo/ # Install Platform metainfo

  # Wine addon that allows opening website content
  - name: WineGecko
    sources:
      - type: file
        url: https://dl.winehq.org/wine/wine-gecko/2.47.4/wine-gecko-2.47.4-x86.msi
        sha256: 26cecc47706b091908f7f814bddb074c61beb8063318e9efc5a7f789857793d6

      - type: file
        url: https://dl.winehq.org/wine/wine-gecko/2.47.4/wine-gecko-2.47.4-x86_64.msi
        sha256: e590b7d988a32d6aa4cf1d8aa3aa3d33766fdd4cf4c89c2dcc2095ecb28d066f

    buildsystem: simple
    build-commands:
      - |
        install -Dm755 wine-gecko-*.msi -t ${FLATPAK_DEST}/share/wine/gecko/ # Install 32bit and 64bit Wine Gecko

  # Wine addon that replaces the default .NET framework
  - name: WineMono
    sources:
      - type: archive
        url: https://dl.winehq.org/wine/wine-mono/10.0.0/wine-mono-10.0.0-x86.tar.xz
        sha256: b487c444415789a8b25b3a6542afa668a6b6d6067c648626f323884443f7b70d
        strip-components: 0

    buildsystem: simple
    build-commands:
      - |
        mkdir -p ${FLATPAK_DEST}/share/wine/mono/          # Make direcory path for Wine Mono
        cp -a wine-mono-* ${FLATPAK_DEST}/share/wine/mono/ # Copy Wine Mono keeping file permissions the same

  # Vulkan based D3D8, 9, 10, and 11 replacement dlls
  # Note: This module just places the DXVK dlls in ${FLATPAK_DEST}/share/dxvk/ and child Apps will have to copy/replace the default Wine dlls with these to make use of DXVK
  - name: DXVK
    sources:
      - type: archive
        url: https://github.com/doitsujin/dxvk/releases/download/v2.6/dxvk-2.6.tar.gz
        sha256: 0d762c33869c46aa85ad563057a9cbe0a247cd5a7d1209e484bdbe7335c77f01

      # Script that switches a Wine prefix to DXVK dlls from the default Wine dlls (Optionally ran by child Apps to update their already initialized Wine prefix)
      - type: file
        path: Scripts/DXVKToWine.sh

      # Script that switches a Wine prefix to the default Wine dlls from DXVK dlls (Optionally ran by child Apps to update their already initialized Wine prefix)
      - type: file
        path: Scripts/WineToDXVK.sh

    buildsystem: simple
    build-commands:
      - |
        mkdir -p ${FLATPAK_DEST}/share/dxvk/  # Make direcory path for DXVK
        cp -a x32 ${FLATPAK_DEST}/share/dxvk/ # Copy 32bit DXVK keeping file permissions the same
        cp -a x64 ${FLATPAK_DEST}/share/dxvk/ # Copy 64bit DXVK keeping file permissions the same

        install -Dm755 DXVKToWine.sh -t ${FLATPAK_DEST}/bin/ # Install script for switching Wine prefix to DXVK
        install -Dm755 WineToDXVK.sh -t ${FLATPAK_DEST}/bin/ # Install script for switching Wine prefix to default Wine dlls
